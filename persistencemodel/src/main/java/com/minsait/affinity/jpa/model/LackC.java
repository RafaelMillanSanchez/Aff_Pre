package com.minsait.affinity.jpa.model;
// Generated 23-jul-2020 13:06:59 by Hibernate Tools 5.0.6.Final


import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * LackC generated by hbm2java
 */
@Entity
@Table(name="lack__c"
    ,schema="salesforce"
    , uniqueConstraints = @UniqueConstraint(columnNames="sfid") 
)
public class LackC  implements java.io.Serializable {


     private Integer id;
     private String lkpItemC;
     private String lkpOrderC;
     private Double numAvailableUnitsC;
     private Double numMissingUnitsC;
     private String recordtypeid;
     private String pckStatusC;
     private String name;
     private Boolean isdeleted;
     private Date systemmodstamp;
     private String pckCloseReasonC;
     private Date createddate;
     private String mdAccountC;
     private String sfid;
     private String hcLastop;
     private String hcErr;

    public LackC() {
    }

	
    public LackC(Integer id) {
        this.id = id;
    }
    public LackC(Integer id, String lkpItemC, String lkpOrderC, Double numAvailableUnitsC, Double numMissingUnitsC, String recordtypeid, String pckStatusC, String name, Boolean isdeleted, Date systemmodstamp, String pckCloseReasonC, Date createddate, String mdAccountC, String sfid, String hcLastop, String hcErr) {
       this.id = id;
       this.lkpItemC = lkpItemC;
       this.lkpOrderC = lkpOrderC;
       this.numAvailableUnitsC = numAvailableUnitsC;
       this.numMissingUnitsC = numMissingUnitsC;
       this.recordtypeid = recordtypeid;
       this.pckStatusC = pckStatusC;
       this.name = name;
       this.isdeleted = isdeleted;
       this.systemmodstamp = systemmodstamp;
       this.pckCloseReasonC = pckCloseReasonC;
       this.createddate = createddate;
       this.mdAccountC = mdAccountC;
       this.sfid = sfid;
       this.hcLastop = hcLastop;
       this.hcErr = hcErr;
    }
   
     @Id 

     @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="lkp_item__c", length=18)
    public String getLkpItemC() {
        return this.lkpItemC;
    }
    
    public void setLkpItemC(String lkpItemC) {
        this.lkpItemC = lkpItemC;
    }

    
    @Column(name="lkp_order__c", length=18)
    public String getLkpOrderC() {
        return this.lkpOrderC;
    }
    
    public void setLkpOrderC(String lkpOrderC) {
        this.lkpOrderC = lkpOrderC;
    }

    
    @Column(name="num_available_units__c", precision=17, scale=17)
    public Double getNumAvailableUnitsC() {
        return this.numAvailableUnitsC;
    }
    
    public void setNumAvailableUnitsC(Double numAvailableUnitsC) {
        this.numAvailableUnitsC = numAvailableUnitsC;
    }

    
    @Column(name="num_missing_units__c", precision=17, scale=17)
    public Double getNumMissingUnitsC() {
        return this.numMissingUnitsC;
    }
    
    public void setNumMissingUnitsC(Double numMissingUnitsC) {
        this.numMissingUnitsC = numMissingUnitsC;
    }

    
    @Column(name="recordtypeid", length=18)
    public String getRecordtypeid() {
        return this.recordtypeid;
    }
    
    public void setRecordtypeid(String recordtypeid) {
        this.recordtypeid = recordtypeid;
    }

    
    @Column(name="pck_status__c")
    public String getPckStatusC() {
        return this.pckStatusC;
    }
    
    public void setPckStatusC(String pckStatusC) {
        this.pckStatusC = pckStatusC;
    }

    
    @Column(name="name", length=80)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="isdeleted")
    public Boolean getIsdeleted() {
        return this.isdeleted;
    }
    
    public void setIsdeleted(Boolean isdeleted) {
        this.isdeleted = isdeleted;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="systemmodstamp", length=29)
    public Date getSystemmodstamp() {
        return this.systemmodstamp;
    }
    
    public void setSystemmodstamp(Date systemmodstamp) {
        this.systemmodstamp = systemmodstamp;
    }

    
    @Column(name="pck_close_reason__c")
    public String getPckCloseReasonC() {
        return this.pckCloseReasonC;
    }
    
    public void setPckCloseReasonC(String pckCloseReasonC) {
        this.pckCloseReasonC = pckCloseReasonC;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createddate", length=29)
    public Date getCreateddate() {
        return this.createddate;
    }
    
    public void setCreateddate(Date createddate) {
        this.createddate = createddate;
    }

    
    @Column(name="md_account__c", length=18)
    public String getMdAccountC() {
        return this.mdAccountC;
    }
    
    public void setMdAccountC(String mdAccountC) {
        this.mdAccountC = mdAccountC;
    }

    
    @Column(name="sfid", unique=true, length=18)
    public String getSfid() {
        return this.sfid;
    }
    
    public void setSfid(String sfid) {
        this.sfid = sfid;
    }

    
    @Column(name="_hc_lastop", length=32)
    public String getHcLastop() {
        return this.hcLastop;
    }
    
    public void setHcLastop(String hcLastop) {
        this.hcLastop = hcLastop;
    }

    
    @Column(name="_hc_err")
    public String getHcErr() {
        return this.hcErr;
    }
    
    public void setHcErr(String hcErr) {
        this.hcErr = hcErr;
    }




}


